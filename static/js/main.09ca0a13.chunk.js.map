{"version":3,"sources":["components/Form.js","components/Card.js","components/Home.js","components/Cat.js","components/App.js","index.js"],"names":["Form","props","className","value","onChange","func","options","Card","cats","length","map","item","index","undefined","alt","src","url","to","id","Home","history","useState","breeds","setBreeds","isBreedsReady","setIsBreedsReady","isImagesLoaded","setIsIamagesLoaded","currentBreed","setCurrentBreed","isAbleToLoad","setIsAbleToLoad","setOptions","setCats","page","setPage","useEffect","breed","location","search","split","fetch","then","response","json","data","name","e","target","onClick","newCats","forEach","cat","find","newCat","push","oldCats","disabled","style","display","Cat","setCat","match","params","origin","temperament","description","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"iMAAe,SAASA,EAAKC,GACzB,OACI,sBAAMC,UAAU,SAAhB,SACI,yBAAQA,UAAU,eAAeC,MAAOF,EAAME,MAAOC,SAAUH,EAAMI,KAArE,UACI,wBAAQF,MAAM,GAAd,0BACCF,EAAMK,aCHR,SAASC,EAAKN,GACzB,OAAyB,IAAtBA,EAAMO,KAAKC,QAAiBR,EAAMO,KAI7B,qBAAKN,UAAU,QAAf,SACKD,EAAMO,KAAKE,KAAI,SAACC,EAAMC,GACnB,QAAYC,IAATF,EACC,OACI,sBAAiBT,UAAU,cAA3B,UACI,qBAAKA,UAAU,YAAYY,IAAI,GAAGC,IAAKJ,EAAKK,MAC5C,cAAC,IAAD,CAAMC,GAAE,gBAAWN,EAAKO,IAAMhB,UAAU,gBAAxC,4BAFMU,QAPvB,qBAAKV,UAAU,YAAf,+BCAA,SAASiB,EAAKC,GAAU,IAAD,EACNC,mBAAS,IADH,mBAC3BC,EAD2B,KACnBC,EADmB,OAEQF,oBAAS,GAFjB,mBAE3BG,EAF2B,KAEZC,EAFY,OAGWJ,oBAAS,GAHpB,mBAG3BK,EAH2B,KAGXC,EAHW,OAIMN,mBAAS,IAJf,mBAI3BO,EAJ2B,KAIbC,EAJa,OAKMR,oBAAS,GALf,mBAK3BS,EAL2B,KAKbC,EALa,OAMJV,mBAAS,IANL,mBAM3Bf,EAN2B,KAMlB0B,EANkB,OAOVX,mBAAS,IAPC,mBAO3Bb,EAP2B,KAOrByB,EAPqB,OAQVZ,mBAAS,GARC,mBAQ3Ba,EAR2B,KAQrBC,EARqB,KAoGlC,OA1FAC,qBAAU,WAwBV,IAAwBC,EAvBpBR,GAAgB,WAEZ,OADYT,EAAQkB,SAASC,OAAOC,MAAM,KAC7B,MAEjBC,MAAM,oFACLC,MACG,SAACC,GAAD,OAAcA,EAASC,UAE1BF,MACG,SAACG,GACqB,IAAlBvB,EAAOb,OAAec,EAAUsB,GAAQpB,GAAiB,OAa7CY,EATLT,IAWXa,MAAM,mDAAD,OAAoDP,EAApD,8BAA8EG,IAClFK,MACG,SAACC,GACG,OAAOA,EAASC,UACtBF,MACE,SAACG,GACGZ,EAAQY,GACRlB,GAAmB,GACnBQ,EAAQ,GACRJ,GAAgB,QAnB9B,CAACT,IAEHc,qBAAU,WACHZ,GACCQ,EAAWV,EAAOZ,KAAI,SAACC,EAAMC,GAAP,OAAiB,wBAAQT,MAAOQ,EAAKO,GAApB,SAAqCP,EAAKmC,MAAblC,SAE1E,CAACY,EAAeF,IAoEdE,EAII,0BAAStB,UAAU,SAAnB,UACI,oBAAIA,UAAU,QAAd,6BACA,cAACF,EAAD,CAAMK,KAvDlB,SAAsB0C,GAClB,QAAUlC,IAANkC,GAAsC,KAAnBA,EAAEC,OAAO7C,MAK5B,OAJA8B,EAAQ,IACRF,GAAgB,GAChBJ,GAAmB,QACnBE,EAAgB,IAGpBA,EAAgBkB,EAAEC,OAAO7C,OACzBsC,MAAM,mDAAD,OAAoDP,EAApD,8BAA8Ea,EAAEC,OAAO7C,QAC3FuC,MACG,SAACC,GACG,OAAOA,EAASC,UACtBF,MACE,SAACG,GACGZ,EAAQY,GACRlB,GAAmB,GACnBQ,EAAQ,GACRJ,GAAgB,OAqCUzB,QAASA,EAASH,MAAOyB,IACnD,cAACrB,EAAD,CAAMC,KAAMA,IAEPkB,GAAkBI,EACnB,wBAAQ5B,UAAU,YAAY+C,QApC9C,WACIR,MAAM,mDAAD,OAAoDP,EAAK,EAAzD,8BAAgFN,IACpFc,MACG,SAACC,GACG,OAAOA,EAASC,UACtBF,MACE,SAACG,GACG,IAAIK,EAAU,GACdL,EAAKM,SAAQ,SAAAC,GACI5C,EAAK6C,MAAK,SAAAC,GACnB,OAAOF,EAAIlC,KAAOoC,EAAOpC,OAGzBgC,EAAQK,KAAKH,MAGjBF,EAAQzC,QACRsB,GAAgB,GAEpBE,GAAQ,SAACuB,GAAD,4BAAkBA,GAAYN,SAG9CvB,GAAmB,GACnBQ,EAAQD,EAAK,IAaD,uBACA,wBAAQuB,UAAQ,EAACC,MAAO,CAACC,QAAS,QAASzD,UAAU,YAArD,0BAVL,yBAASA,UAAU,UAAnB,6CCtGA,SAAS0D,EAAI3D,GAAQ,IAAD,EAEToB,oBAAS,GAFA,mBAExB+B,EAFwB,KAEnBS,EAFmB,KAa/B,OATAzB,qBAAU,WAENK,MAAM,uCAAD,OAAwCxC,EAAM6D,MAAMC,OAAO7C,KAC/DwB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUgB,EAAOhB,QAEzB,CAAC5C,EAAM6D,MAAMC,OAAO7C,KAGlBkC,EAII,yBAASlD,UAAU,SAAnB,SACI,sBAAKA,UAAU,eAAf,UACI,cAAC,IAAD,CAAMe,GAAE,uBAAkBmC,EAAI9B,OAAO,GAAGJ,IAAMhB,UAAU,uBAAxD,kBACA,qBAAKA,UAAU,oBAAoBa,IAAKqC,EAAIpC,IAAKF,IAAKsC,EAAI9B,OAAOwB,OACjE,oBAAI5C,UAAU,eAAd,SAA6B,4BAAIkD,EAAI9B,OAAO,GAAGwB,SAC/C,qBAAI5C,UAAU,eAAd,qBAAsCkD,EAAI9B,OAAO,GAAG0C,UACpD,oBAAI9D,UAAU,eAAd,SAA8BkD,EAAI9B,OAAO,GAAG2C,cAC5C,mBAAG/D,UAAU,eAAb,SAA6BkD,EAAI9B,OAAO,GAAG4C,mBAVhD,yBAAShE,UAAU,UAAnB,qBCRA,SAASiE,IACvB,OACG,sBAAMjE,UAAU,MAAhB,SACQ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,QAAQC,UAAWnD,IAErC,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,YAAYC,UAAWV,SCRzDW,IAASC,OACL,cAACL,EAAD,IACAM,SAASC,eAAe,W","file":"static/js/main.09ca0a13.chunk.js","sourcesContent":["export default function Form(props) {\r\n    return(\r\n        <form className=\"breeds\">\r\n            <select className=\"breeds__list\" value={props.value} onChange={props.func}>\r\n                <option value=''>Select Breed</option>\r\n                {props.options}\r\n            </select>\r\n        </form>\r\n    )\r\n}","import {Link} from 'react-router-dom'\r\n\r\nexport default function Card(props) {\r\n    if(props.cats.length === 0 || !props.cats) {\r\n        return <div className=\"no-result\">No Cats Available</div>\r\n    } else {\r\n        return(\r\n            <div className=\"cards\">\r\n                {props.cats.map((item, index) => {\r\n                    if(item !== undefined) {\r\n                        return(\r\n                            <div key={index} className=\"cards__item\">\r\n                                <img className=\"cat-image\" alt='' src={item.url}></img>\r\n                                <Link to={`/task/${item.id}`} className=\"cards__button\">View Details</Link>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","import {useEffect, useState} from 'react';\r\nimport Form from './Form'\r\nimport Card from './Card'\r\n\r\nexport default function Home(history) {\r\n    const [breeds, setBreeds] = useState([]);\r\n    const [isBreedsReady, setIsBreedsReady] = useState(false);\r\n    const [isImagesLoaded, setIsIamagesLoaded] = useState(false);\r\n    const [currentBreed, setCurrentBreed] = useState('');\r\n    const [isAbleToLoad, setIsAbleToLoad] = useState(true);\r\n    const [options, setOptions] = useState([]);\r\n    const [cats, setCats] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setCurrentBreed(() => {\r\n            let breed = history.location.search.split('=')\r\n            return breed[1]\r\n        })\r\n        fetch('https://api.thecatapi.com/v1/breeds?api_key=84e25b2c-5d42-4ee9-a868-57ebde785aec')\r\n        .then(\r\n            (response) => response.json()\r\n        )\r\n        .then(\r\n            (data) => {\r\n                breeds.length === 0 ? setBreeds(data) : setIsBreedsReady(true);\r\n            }\r\n        )\r\n\r\n        handlePageLoad(currentBreed)\r\n    },[breeds])\r\n\r\n    useEffect(() => {\r\n        if(isBreedsReady) {\r\n            setOptions(breeds.map((item, index) => <option value={item.id} key={index}>{item.name}</option>))\r\n        }\r\n    },[isBreedsReady, breeds])\r\n\r\n    function handlePageLoad(breed) {\r\n        if(breed) {\r\n            fetch(`https://api.thecatapi.com/v1/images/search?page=${page}&limit=10&breed_id=${breed}`)\r\n            .then(\r\n                (response) => {\r\n                    return response.json()}\r\n            ).then(\r\n                (data) => {\r\n                    setCats(data)\r\n                    setIsIamagesLoaded(true)\r\n                    setPage(1)\r\n                    setIsAbleToLoad(true)\r\n                }\r\n            )   \r\n        }\r\n    }\r\n\r\n    function handleChange(e) {\r\n        if (e === undefined || e.target.value === '' ) {\r\n            setCats([])\r\n            setIsAbleToLoad(false)\r\n            setIsIamagesLoaded(false)\r\n            setCurrentBreed('')\r\n            return\r\n        }\r\n        setCurrentBreed(e.target.value)\r\n        fetch(`https://api.thecatapi.com/v1/images/search?page=${page}&limit=10&breed_id=${e.target.value}`)\r\n        .then(\r\n            (response) => {\r\n                return response.json()}\r\n        ).then(\r\n            (data) => {\r\n                setCats(data)\r\n                setIsIamagesLoaded(true)\r\n                setPage(1)\r\n                setIsAbleToLoad(true)\r\n            }\r\n        )\r\n    }\r\n\r\n    function loadMore() {\r\n        fetch(`https://api.thecatapi.com/v1/images/search?page=${page+1}&limit=10&breed_id=${currentBreed}`)\r\n        .then(\r\n            (response) => {\r\n                return response.json()}\r\n        ).then(\r\n            (data) => {\r\n                let newCats = []\r\n                data.forEach(cat => {\r\n                    let newCat = cats.find(newCat => {\r\n                        return cat.id === newCat.id\r\n                    })\r\n                    if(!newCat) {\r\n                        newCats.push(cat)\r\n                    }\r\n                })\r\n                if(!newCats.length) {\r\n                    setIsAbleToLoad(false)\r\n                }\r\n                setCats((oldCats) => ([...oldCats, ...newCats]))\r\n            }\r\n        )\r\n        setIsIamagesLoaded(true)\r\n        setPage(page+1)\r\n    }\r\n\r\n    if(!isBreedsReady) {\r\n        return <section className=\"loading\">Searching for available breeds!</section>\r\n    } else {\r\n        return(\r\n            <section className=\"search\">\r\n                <h1 className='title'>Search for Cats</h1>\r\n                <Form func={handleChange} options={options} value={currentBreed}/>\r\n                <Card cats={cats}/>\r\n                {\r\n                    (isImagesLoaded && isAbleToLoad) ?\r\n                    <button className=\"load-more\" onClick={loadMore}>Load more</button> :\r\n                    <button disabled style={{display: 'none'}} className=\"load-more\">Load more</button>\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}","import {useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Cat(props) {\r\n\r\n    const [cat, setCat] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(`https://api.thecatapi.com/v1/images/${props.match.params.id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setCat(data))\r\n\r\n    },[props.match.params.id])\r\n\r\n    \r\n    if(!cat) {\r\n        return <section className=\"loading\">Loading</section>\r\n    } else {\r\n        return(\r\n            <section className=\"single\">\r\n                <div className=\"single__item\">\r\n                    <Link to={`/task/?breed=${cat.breeds[0].id}`} className=\"single__button--back\">Back</Link>\r\n                    <img className=\"cat-image__single\" src={cat.url} alt={cat.breeds.name}></img> \r\n                    <h1 className=\"single__info\"><b>{cat.breeds[0].name}</b></h1>\r\n                    <h2 className=\"single__info\">Origin: {cat.breeds[0].origin}</h2>\r\n                    <h3 className=\"single__info\">{cat.breeds[0].temperament}</h3>\r\n                    <p className=\"single__info\">{cat.breeds[0].description}</p>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    HashRouter\r\n  } from \"react-router-dom\";\r\n\r\n  import Home from \"./Home\"\r\n  import Cat from \"./Cat\"\r\n\r\nexport default function App() {\r\n return(\r\n    <main className=\"app\">\r\n            <Router>\r\n                <Route exact path=\"/task\" component={Home}>\r\n                </Route>\r\n                <Route exact path=\"/task/:id\" component={Cat}>\r\n                </Route>\r\n            </Router>\r\n    </main>\r\n )\r\n}","import React from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport './style/style.css'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}